package ru.itmo.ki40lf.clientPart;

import ru.itmo.ki40lf.common.Request;

import java.io.*;
import java.util.Arrays;
import java.util.Stack;

import static ru.itmo.ki40lf.clientPart.Client.sendRequest;

public class ExecuteScript {
    public static void executeScript(String filePath) {
        File scriptFile = new File(filePath);

        if (!scriptFile.exists() || !scriptFile.isFile()) {
            System.out.println("‚õîÔ∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —ç—Ç–æ –Ω–µ —Ñ–∞–π–ª.");
            return;
        }

        try (BufferedReader reader = new BufferedReader(new FileReader(scriptFile))) {
            String line;
            while ((line = reader.readLine()) != null) {
                if (line.trim().isEmpty()) continue; // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏

                System.out.println("üìú –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: " + line);

                // –ü–∞—Ä—Å–∏–º –∫–æ–º–∞–Ω–¥—É
                String[] commandLine = line.trim().split("\\s+");
                String command = commandLine[0];
                String[] arguments = Arrays.copyOfRange(commandLine, 1, commandLine.length);

                // –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å
                Request request = new Request(command, arguments, null);

                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∏ —á–∏—Ç–∞–µ–º –æ—Ç–≤–µ—Ç
                try {
                    sendRequest(request);
                } catch (IOException e) {
                    System.out.println("‚õîÔ∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: " + command);
                }
            }
        } catch (IOException e) {
            System.out.println("‚õîÔ∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: " + e.getMessage());
        }
    }
}
